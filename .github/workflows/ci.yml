# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ V0.1 ]
  pull_request:
    branches: [ V0.1 ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@master

    # Runs a single command using the runners shell
    - name: Run a one-line script
      run: |
        wd=`pwd`
        echo "we are at "$wd
    - name: Check jdk
      uses: actions/setup-java@v1.4.3
      with:
        java-version: 1.8

    - name: build
      run: |
        wd=`pwd`
        echo "we are at "$wd
        mvn -B clean package -Dproject.build.finalName=TodoList.Demo

    - name: test existance
      run: |
        wd=`pwd`
        echo "we are at "$wd
        ls target
        cd target
        ls

    - name: ssh before scp
      uses: appleboy/ssh-action@v0.1.3
      with:
        host: ${{ secrets.CI_HOST }}
        port: ${{ secrets.CI_SSH_PORT }}
        username: ${{ secrets.CI_USER }}
        key: ${{ secrets.CI_SSH_KEY }}
        script: |
          mkdir -p ~/demo

    - name: send file by scp
      uses: appleboy/scp-action@master
      with:
        host: ${{ secrets.CI_HOST }}
        username: ${{ secrets.CI_USER }}
        port: ${{ secrets.CI_SSH_PORT }}
        key: ${{ secrets.CI_SSH_KEY }}
        proxy_host: ${{ secrets.PROXY_HOST }}
        proxy_port: ${{ secrets.PROXY_SSH_PORT }}
        proxy_username: ${{ secrets.PROXY_USER }}
        proxy_password: ${{ secrets.PROXY_PASSWORD }}
        proxy_key: ${{ secrets.PROXY_SSH_KEY }}
        source: "target/*.jar"
        target: "~/demo"
        strip_components: 1

    - name: ssh after scp (run server)
      uses: appleboy/ssh-action@v0.1.3
      with:
        host: ${{ secrets.CI_HOST }}
        port: ${{ secrets.CI_SSH_PORT }}
        username: ${{ secrets.CI_USER }}
        key: ${{ secrets.CI_SSH_KEY }}
        script: |
          cd ~/demo
          echo "make dir /var/todolist if exists"
          sudo mkdir -p /var/todolist
          echo "copy demo.jar to /var/todolist"
          sudo cp ~/demo/demo.jar /var/todolist
          sudo chmod 777 /var/todolist/*
          
